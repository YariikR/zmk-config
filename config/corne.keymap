/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LA(LC(RIGHT_GUI)) TAB        &kp Q  &kp W  &kp E                   &kp R               &kp T          &kp Y        &kp U                &kp I                    &kp O    &kp P     &lt 3 RIGHT_CONTROL
&mt LA(LC(LG(RIGHT_SHIFT))) ESC  &kp A  &kp S  &kp D                   &kp F               &kp G          &kp H        &kp J                &kp K                    &kp L    &kp SEMI  &kp SQT
&kp LSHFT                        &kp Z  &kp X  &kp C                   &kp V               &kp B          &kp N        &kp M                &kp COMMA                &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                               &mt LEFT_ALT BACKSPACE  &mt LEFT_GUI ENTER  &lt 1 SPACE    &lt 2 SPACE  &mt RIGHT_GUI ENTER  &mt RIGHT_ALT BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans         &kp N1           &kp N2          &kp N3           &kp N4          &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans         &trans           &kp LEFT_ARROW  &kp UP_ARROW     &kp DOWN_ARROW  &kp RIGHT    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LG(GRAVE)  &kp LG(LS(TAB))  &kp LG(TAB)     &kp LC(LS(TAB))  &kp LC(TAB)     &trans       &trans    &trans    &trans  &trans     &trans  &trans
                                                &trans           &trans          &trans       &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT    &kp HASH     &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp TILDE  &trans    &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END      &kp MINUS  &kp EQUAL  &kp LBRC         &kp LBKT  &kp RBKT  &kp RBRC
&trans     &trans    &trans    &trans       &trans         &trans       &kp UNDER  &kp PLUS   &kp COMMA        &kp DOT   &kp BSLH  &kp PIPE
                               &trans       &trans         &trans       &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11    &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans      &trans  &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F12  &trans     &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &trans   &trans     &trans          &kp K_MUTE            &kp C_PP              &trans      &trans  &trans
                        &trans  &trans   &trans     &trans          &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

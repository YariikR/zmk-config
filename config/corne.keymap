/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Caps_Word {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };

        Numbed {
            bindings = <&tog 5>;
            key-positions = <12 13>;
        };

        Caps_Lock {
            bindings = <&kp CLCK>;
            key-positions = <12 23>;
        };

        BT1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <4 5>;
        };

        BT2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <16 17>;
        };

        BT3 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <28 29>;
        };

        Right_To_Left {
            bindings = <&tog 6>;
            key-positions = <0 1>;
        };

        vim_toggle {
            bindings = <&tog 7>;
            key-positions = <10 11>;
        };
    };

    behaviors {
        vim_d: vim_d {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_D";
            bindings = <&kp RG(X)>, <&kp RC(K)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        vim_s: vim_s {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_S";
            bindings = <&kp DELETE>, <&vim_S>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        vim_gg: vim_gg {
            compatible = "zmk,behavior-tap-dance";
            label = "VIM_GG";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp LG(UP_ARROW)>;
        };

        vim_G: vim_G {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_G";
            bindings = <&vim_gg>, <&kp RG(UP_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        to_vim: to_vim {
            compatible = "zmk,behavior-hold-tap";
            label = "TO_VIM";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        vim_o: vim_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(RIGHT) &kp ENTER>;
            label = "VIM_O";
        };

        vim_w: vim_w {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RIGHT) &kp RA(RIGHT) &kp RA(LEFT)>;
            label = "VIM_W";
        };

        vim_S: vim_S {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RG(LEFT_ARROW) &kp RC(K)>;
            label = "VIM_S";
        };

        vim_layer: vim_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 7>;
            label = "VIM_LAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LA(LC(RIGHT_GUI)) TAB        &kp Q  &kp W  &kp E                   &kp R               &kp T          &kp Y        &kp U                        &kp I                &kp O    &kp P     &lt 3 LEFT_BRACKET
&mt LA(LC(LG(RIGHT_SHIFT))) ESC  &kp A  &kp S  &kp D                   &kp F               &kp G          &kp H        &kp J                        &kp K                &kp L    &kp SEMI  &mt RIGHT_CONTROL SQT
&kp LEFT_SHIFT                   &kp Z  &kp X  &kp C                   &kp V               &kp B          &kp N        &kp M                        &kp COMMA            &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                               &mt LEFT_ALT BACKSPACE  &mt LEFT_GUI ENTER  &lt 1 SPACE    &lt 2 ENTER  &mt RIGHT_COMMAND BACKSPACE  &to_vim RIGHT_ALT 7
            >;
        };

        Numb_Arr {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(GRAVE)    &kp N1       &kp N2          &kp N3        &kp N4          &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&kp LS(LC(TAB))  &kp LC(TAB)  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans           &key_repeat  &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN   &kp END      &trans    &trans    &trans  &trans     &trans  &trans
                                              &trans        &trans          &trans       &trans    &trans    &trans
            >;
        };

        Symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp TILDE  &kp LBKT  &kp RBKT  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp LBRC  &kp RBRC  &kp RBKT
&trans     &trans    &trans    &trans    &trans    &trans       &kp UNDER  &kp PLUS   &trans           &trans    &kp BSLH  &kp PIPE
                               &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        BT {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        System {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11    &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans      &trans  &kp C_POWER
&trans  &kp F4  &kp F5  &kp F6  &kp F12  &trans     &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_NEXT  &trans  &kp C_SLEEP
&trans  &kp F1  &kp F2  &kp F3  &trans   &trans     &trans          &kp K_MUTE            &kp C_PP              &trans      &trans  &kp C_AC_HOME
                        &trans  &trans   &trans     &trans          &trans                &trans
            >;
        };

        Numpad {
            bindings = <
&kp COMMA     &kp N7  &kp N8  &kp N9  &kp EQUAL  &trans             &trans  &trans  &trans  &trans  &trans  &trans
&kp PERIOD    &kp N4  &kp N5  &kp N6  &kp PLUS   &kp KP_MULTIPLY    &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_0  &kp N1  &kp N2  &kp N3  &kp MINUS  &kp FSLH           &trans  &trans  &trans  &trans  &trans  &trans
                              &trans  &trans     &trans             &trans  &trans  &trans
            >;
        };

        Right_Side {
            bindings = <
&trans  &kp Y  &kp U  &kp I   &kp O   &kp P     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp H  &kp J  &kp K   &kp L   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N  &kp M  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        vim_normal {
            bindings = <
&trans  &trans  &vim_w      &kp RA(RIGHT)  &trans           &trans                &kp RG(C)       &kp RG(Z)       &tog 7        &vim_o       &kp RG(V)  &trans
&trans  &trans  &trans      &vim_d         &trans           &vim_G                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT    &trans     &trans
&trans  &trans  &kp DELETE  &trans         &kt RIGHT_SHIFT  &kp RA(LEFT_ARROW)    &trans          &trans          &trans        &key_repeat  &trans     &trans
                            &trans         &trans           &trans                &trans          &trans          &tog 7
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
